//Microsoft (R) Visual C# Compiler version 3.4.0-beta4-19562-05 (ff930dec)
//Copyright (C) Microsoft Corporation. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace Rextester
{
    public class Program
    {
        public static void Main(string[] args)
        {
            //Your code goes here
            Orcamento orcamento = new Orcamento(2000);
            CalculadorDeImpostos calculador = new CalculadorDeImpostos();
            calculador.RealizaCalculo(orcamento, new ICMS());
            calculador.RealizaCalculo(orcamento, new ISS()); 
            calculador.RealizaCalculo(orcamento, new ICCC()); 
        }
    }
    
    public class Orcamento 
    {
        public double Valor { get; private set; }

        public Orcamento(double valor) 
        {
            this.Valor = valor;
        }       
        
        public double returnValue()
        {
            return this.Valor;
        }
    }
    
    public class CalculadorDeImpostos 
    {
        public void RealizaCalculo(Orcamento orcamento, Imposto imposto) 
        {        
            double valor = imposto.Calcula(orcamento); 
            Console.WriteLine(valor);
        }
    }
    
    public interface Imposto 
    {
        double Calcula(Orcamento orcamento);
    }
    
    public abstract class TemplateDeImpostoCondicional : Imposto 
    {
        public double Calcula(Orcamento orcamento){
	  if(DeveUsarMaximaTaxacao(orcamento)){
	    return MaximaTaxacao(orcamento);
	  }
	  return MinimaTaxacao((orcamento);
	}
	
	public abstract bool DeveUsarMaximaTaxacao(Orcamento (orcamento);
	public abstract double MaximaTaxacao(Orcamento (orcamento);
	public abstract double MinimaTaxacao(Orcamento (orcamento);
    }	

    public class ICPP : TemplateDeImpostoCondicional
    {
        public bool DeveUsarMaximaTaxacao(Orcamento (orcamento){
	  return orcamento.Valor >= 500;
	}
	public double MaximaTaxacao(Orcamento (orcamento){
	  return orcamento.Valor * 0.07;
	}
	public double MinimaTaxacao(Orcamento (orcamento){
	  return orcamento;
	}
    }

    public class ICMS : Imposto
    {
        public double Calcula(Orcamento orcamento) 
        {
            return orcamento.Valor * 0.05 + 50;
        }
    }
    
    public class ISS : Imposto
    {
        public double Calcula(Orcamento orcamento)
        {
            return orcamento.Valor * 0.06;
        }
    }
}